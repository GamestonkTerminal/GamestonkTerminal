name: Example workflow for Codecov
on: [push]
jobs:
  run:
    runs-on: ubuntu-latest
    strategy:
    env:
      PIP_DEFAULT_TIMEOUT: 100
      GTFF_USE_PROMPT_TOOLKIT: false
      GTFF_USE_ION: false
      GTFF_ENABLE_QUICK_EXIT: true
    steps:
    - uses: actions/checkout@master
    - name: Setup Python
      uses: actions/setup-python@master
      with:
        python-version: 3.7

    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Setup Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: "3.9"
        architecture: x64

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.1.11
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Install Package
      run: poetry install --no-interaction

    - name: Generate coverage report
      run: |
        pytest 
        source $VENV
        pytest --cov=./ --cov-report=xml
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v2
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./coverage/reports/
        env_vars: OS,PYTHON
        fail_ci_if_error: true
        files: ./coverage1.xml,./coverage2.xml
        flags: unittests
        name: codecov-umbrella
        path_to_write_report: ./coverage/codecov_report.txt
        verbose: true
