"""Python configuration settings model."""

from typing import Optional

from pydantic import BaseModel, ConfigDict, Field


class PythonSettings(BaseModel):
    """Settings model for Python interface configuration."""

    model_config = ConfigDict(frozen=True)

    docstring_max_length: Optional[int] = Field(
        default=None, description="Length of autogenerated docstrings."
    )

    def __repr__(self) -> str:
        """Return a string representation of the model."""
        return f"{self.__class__.__name__}\n\n" + "\n".join(
            f"{k}: {v}" for k, v in self.model_dump().items()
        )
